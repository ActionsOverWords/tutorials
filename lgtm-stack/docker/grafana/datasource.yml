# config file version
apiVersion: 1

datasources:
  - uid: mimir
    name: Mimir
    type: prometheus
    access: proxy
    url: http://mimir:9009/prometheus
    isDefault: true
    jsonData:
      # Exemplar를 통해 Tempo로 연동
      exemplarTraceIdDestinations:
        - name: trace_id
          datasourceUid: tempo
    editable: true

  - uid: loki
    name: Loki
    type: loki
    access: proxy
    url: http://loki:3100
    jsonData:
      maxLines: 1000
      # 로그에서 traceId를 추출하여 Tempo로 연동
      derivedFields:
        - datasourceUid: tempo
          matcherRegex: '\[([0-9a-f]{32}),([0-9a-f]{16})\]'
          name: traceId
          url: '$${__value.raw}'
    editable: true

  - uid: tempo
    name: Tempo
    type: tempo
    access: proxy
    url: http://tempo:3200
    jsonData:
      httpMethod: GET
      tracesToLogsV2:
        datasourceUid: 'loki'
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
        filterByTraceID: true
        filterBySpanID: false
        tags:
          - key: 'service.name'
            value: 'service'
      tracesToMetrics:
        datasourceUid: 'mimir'
      tracesToProfiles:
        datasourceUid: 'pyroscope'
        tags:
          - service.name
          - service.namespace
        profileTypeId: 'process_cpu:cpu:nanoseconds:cpu:nanoseconds'
        customQuery: true
        query: 'process_cpu:cpu:nanoseconds:cpu:nanoseconds{service_name="$${__tags.service.name}"}'
      serviceMap:
        datasourceUid: 'mimir'
      nodeGraph:
        enabled: true
    editable: true

  - uid: pyroscope
    name: Pyroscope
    type: grafana-pyroscope-datasource
    access: proxy
    url: http://pyroscope:4040
    jsonData:
      keepCookies: []
      minStep: '15s'
    editable: true
